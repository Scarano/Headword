run-under-name: [lex-parse-wb-rw.9]

overwrite-output-dir: false

data-root: /scratch/scarano.s/data

temp-root: /tmp/scarano.s

#output-root: /scratch/scarano.s/output

# lm.sentence-candidates is the "n" in n-best. If 0, n-best rescoring is not performed.
# If > 0, SRILMNBestCorrector is used. Setting to 0 or 1 should result in the same behavior.
lm.sentence-candidates: [100]
lm.order: 3
srilm.bin: /scratch/scarano.s/src/srilm/bin/i686-m64
#srilm.variant: [kni.v3 wb.v2]
srilm.variant: kni-unk5
srilm.set: [clean1.4to15]
srilm.model: wwp/prose.${srilm.set}.lm.${lm.order}${srilm.variant}.txt
#srilm.model: wwp/prose.lm.3kni.v3.txt

lattice.word-candidates: [20]
lattice.max-word-merges: 1
lattice.max-punctuation-merges: 3
lattice.allow-free-dehyphenation: true

clustering.n: [150]
clustering.caseless: cl
clustering.punctuation: ip
clustering.file: clustering/prose.train.clean1.${clustering.caseless}.${clustering.punctuation}-c${clustering.n}-p1.out/paths
clustering.unk-prob: -4

#rescore.method: [tag-oracle]
#rescore.method: [parse]
#rescore.method: tag-ngram
rescore.method: lex-parse
rescore.log-linear-mix: false
rescore.normalize: [T]
rescore.weight: [0.9]

#tag-ngram.model: tagngram/prose.train.clean1.c${clustering.n}.${clustering.caseless}.${clustering.punctuation}.lm.7wb.txt
#tag-ngram.order: [3]
#tag-ngram.generate-fully: true

#parser.grammar.training-set: prose.train.clean1.4to10.c${clustering.n}.${clustering.caseless}
#parser.grammar.variant: ip.model70
#parser.grammar.name: ${parser.grammar.training-set}.${parser.grammar.variant}
#parser.grammar.file: grammar/models/${parser.grammar.name}.gra
#parser.cache.file: cache/parses_${parser.grammar.name}.${test-set.max-sentence-length}

parser.model-training: [4to15]
parser.model-method: [em]
parser.model-family: grammar/model.clean1.${parser.model-training}.c${clustering.n}.${parser.model-method}
parser.model-retrain-variant: [dmv]
parser.model-lex-variant: [dmv.v dmv]
parser.tag-model-file: ${parser.model-family}.${parser.model-retrain-variant}.cnt
parser.tag-model-alpha: [1]
parser.lex-model-file: ${parser.model-family}.${parser.model-lex-variant}.lcnt
parser.lex-model-alpha: [-1]
parser.lex-model-lambda: [-1]
parser.combined-model: [T F]
parser.marginal-probability: [T F]


#test-set.name: [anaccountameric01judsgoog fallriverauthent01will reflectionsuponm00aste millerhisgoldend00leoniala]
#test-set.name: [reflectionsuponm00aste.50]
test-set.name: [fallriverauthent01will anaccountameric01judsgoog]
#test-set.part: [.p2]
test-set.part: 
#test-set.name: [test]
test-set.file: alignment/${test-set.name}${test-set.part}.salign

test-set.min-sentence-length: 4
test-set.max-sentence-length: [20]

output-file: ${test-set.name}${test-set.part}.corr

dictionary.file: wwp/prose.train.clean1.vocab.txt
#dictionary.file: wwp/prose.train.vocab.txt
dictionary.max-matches: 100

channel.model-dir: channelmodel
channel.model-em-steps: 1
#channel.model: ${channel.model-dir}/anaccountameric01judsgoog.train.${channel.model-em-steps}.javaobj
channel.model: ${channel.model-dir}/for-doc-${test-set.name}.${channel.model-em-steps}.javaobj
channel.beam-width: 3
channel.weight: [2.0]

